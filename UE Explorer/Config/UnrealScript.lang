<?xml version="1.0" encoding="utf-8" ?>
<Language Name="UnrealScript" Startblock="text">
	<FileTypes>
		<FileType Extension=".uc" Name="UnrealScript code file"/>
	</FileTypes>
	<Block Name="text" Style="text" EscapeChar="" IsMultiline="true">
		<Scope Start="{" End="}" Style="text" Text="{...}" CauseIndent="true" />
		<Scope Start="'if" End="'endif" Style="text" Text="'if...endif" />
		<Scope Start="structdefaultproperties{" End="}" Style="text" Text="" DefaultExpanded="false" CauseIndent="true" />
		<Scope Start="defaultproperties{" End="}" Style="text" Text="" DefaultExpanded="false" CauseIndent="true" />
       	<Scope Start="structcpptext{" End="}" Style="text" Text="" DefaultExpanded="false" CauseIndent="true" />
       	<Scope Start="cpptext{" End="}" Style="text" Text="" DefaultExpanded="false" CauseIndent="true" />
       	<Bracket Start="(" End=")" Style="text" />
		<Bracket Start="[" End="]" Style="text" />
		<!-- Keywords that can exist inside this block -->
		<Keywords>
			<!-- UnrealScript Scope declaration names -->
			<PatternGroup Name="Declarations" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
                cpptext cppstruct structcpptext
				replication
				defaultproperties structdefaults structdefaultproperties
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Statements" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				break
				case
				continue
				default
				do
				while
				until
				else
				for
				foreach
				switch
				if
					add
					insert
					remove
					additem
					removeitem
					insertitem
					find
					sort
					length
					arraycount
					enumcount
					nameof
				goto
				stop
				return
				new
				super
				global
				self
				assert
				none
				true
				false
				extends expands
				within
				ignores
				rot
				vect
				rng
				</Patterns>
			</PatternGroup>
			
			<!-- UnrealScript Modifiers that are valid for multiple types e.g. native can be used for structs, classes, variables and functions 
				Note: Simulated is included but only valid for states and functions 
				
				init is valid for var, struct and function params.
				const is valid for var, function and function params.
			-->
			<PatternGroup Name="General Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				const
				native
				Intrinsic
				private
				protected
				public

				transient
				
				noexport
				export
				
				deprecated
				depreciated
				
				simulated
				
				init
				</Patterns>
			</PatternGroup>

			<!-- UnrealScript Class Modifiers to highlight
				Note: Not all modifiers are added because they might conflict with other keywords
				e.g. a variable can be transient but a class too thus the modifiers are added above within General Modifiers.
			-->
			<PatternGroup Name="Class Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				inherits
				exportstructs
				editinlinenew noteditinlinenew
				cacheexempt
				instanced notinstanced
				perobjectconfig
				perobjectlocalized
				safereplace
				autoexpandcategories
				autocollapsecategories dontautocollapsecategories
				collapsecategories dontcollapsecategories
				config
				globalconfig
				nativereplication
				abstract
				hidedropdown
				hidecategories showcategories
				forcescriptorder
				nousercreate
				placeable notplaceable
				dllbind
				implements
				dependson
				parseconfig
				nontransient
				guid
				</Patterns>
			</PatternGroup>
			
			<!-- UnrealScript Modifiers that are valid for functions/operators only
				Note: Does not include modifiers that are already included within General Modifiers
			-->
			<PatternGroup Name="Function Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				dllimport
				virtual
				iterator
				latent
				server
				client
				noexportheader
				static
				final
				exec
				demorecording
				singular

				reliable
				unreliable
        
				invariant
				
				k2call
				k2pure
				k2override
				</Patterns>
			</PatternGroup>
			
			<!-- UnrealScript Modifiers that are valid for states only
				Note: Does not include modifiers that are already included within General Modifiers
			-->
			<PatternGroup Name="State Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				auto
				</Patterns>
			</PatternGroup>

			<!-- UnrealScript Modifiers that are valid for structs only 
				Note: Does not include modifiers that are already included within General Modifiers
			-->
			<PatternGroup Name="Struct Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				long
				immutable
				immutablewhencooked
				atomic
				atomicwhencooked
				strictconfig
				</Patterns>
			</PatternGroup>
			
			<!-- UnrealScript Modifiers that are valid for variables -->
			<PatternGroup Name="Variable Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				archetype
				notforconsole
				repnotify
				crosslevelpassive
				protectedwrite
				privatewrite
				serializetext
				edfindable
				editconst
				editconstarray
				editfixedsize
				edithide
				editinline
				editinlineuse
				editinlinenotify
				editoronly
				edittextbox
				interp
				noclear
				noimport
				nontransactional
				cache
				input
				databinding
				duplicatetransient
				automated
				localized
				instanced
				travel
				</Patterns>
			</PatternGroup>

			<!-- UnrealScript Modifiers that are valid for parameters 
				Note: Does not include modifiers that are already included within General Modifiers
			-->
			<PatternGroup Name="Param Modifiers" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				skip
				out
				optional
				coerce
				</Patterns>
			</PatternGroup>
			
			<!-- UnrealScript Keywords to highlight that are allowed within defaultproperty blocks -->
			<PatternGroup Name="DefaultProperties" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
				Empty
				Add
				AddIndex
				Remove
				RemoveIndex
				Replace
				
				Begin
				End
				</Patterns>
			</PatternGroup>

			<!-- UnrealScript Structs/Enums -->
			<PatternGroup Name="Core Structs" Style="UnrealScript Types" CaseSensitive="false">
				<Patterns>
					pointer
					vector
					rotator
					qword
					double
					guid
					vector4
					vector2d
					twovectors
					plane
					quat
					intpoint
					shvectorrgb
					shvector
					color
					linearcolor
					box
					boxspherebounds
					matrix
					cylinder
					coords
					rangevector
					range
					scale
					intbox
					floatbox
					boundingvolume
				</Patterns>
			</PatternGroup>

            <PatternGroup Name="Core Objects" Style="UnrealScript Types">
				<Patterns>
					object
					component
					commandlet
					class
					Subsystem
					interface
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Build-In Types" Style="UnrealScript Types">
				<Patterns>
					int
					float
					array
					orderedarray
					string
					button
					name
					byte
					bool
					map
					pointer
				</Patterns>
			</PatternGroup>

			<!-- Type defines -->
			<PatternGroup Name="Declarations" Style="UnrealScript Keyword" CaseSensitive="false">
				<Patterns>
					function
					delegate
					event
					enum
					struct		
					state
					var
					local
					operator
					preoperator
					postoperator
					const
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Define Syntax" Style="UnrealScript Define Syntax">
				<Patterns>
					'define
					'isdefined
					'notdefined
					'if
					'else
					'endif
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Defines" Style="UnrealScript Defines">
				<Patterns>
					FINAL_RELEASE
					debug
					prevent_direct_calls
				</Patterns>
			</PatternGroup>

			<!-- Object, Actor constants -->
			<PatternGroup Name="Constants" Style="UnrealScript Constants">
				<Patterns>
					MaxInt
					Pi
					RadToDeg
					DegToRad
					UnrRotToRad
					RadToUnrRot
					INDEX_NONE
					AspectRatio4x3
					AspectRatio5x4
					AspectRatio16x9
					InvAspectRatio4x3
					InvAspectRatio5x4
					InvAspectRatio16x9
					TRACEFLAG_Bullet
					TRACEFLAG_PhysicsVolumes
					TRACEFLAG_SkipMovers
					TRACEFLAG_Blocking
					REP_RBLOCATION_ERROR_TOLERANCE_SQ
					MINFLOORZ
					ACTORMAXSTEPHEIGHT
					RBSTATE_LINVELSCALE
					RBSTATE_ANGVELSCALE
				</Patterns>
			</PatternGroup>

			<!-- For the cpptext block, just so it looks nicer :D -->
			<PatternGroup Name="CPP" Style="UnrealScript CPP Syntax">
				<Patterns>
					void
					inline
					UBOOL
					FORCEINLINE
					FVector
					FRotator
					FMatrix
					DWORD
					WORD
					UINT
					FName
					TArray
					FString
					FColor
					FLinearColor
					FGuid
					FBox
					FPlane
					explicit
					external
					implicit
					friend
					NULL
					sizeof
					this
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Numbers" Style="UnrealScript Number">
				<Pattern Text="(0x[0-9,a-f,A-F]+)" IsComplex="true" />
				<Pattern Text="([0-9]+)" IsComplex="true" />
			</PatternGroup>
		</Keywords>
		<!-- Blocks that can exist inside this block -->
		<ChildBlocks>
			<Child Name="UnrealScript Multiline Comment" />
			<Child Name="UnrealScript Singleline Comment" />
			<Child Name="UnrealScript String" />
			<Child Name="UnrealScript Char" />
		</ChildBlocks>
	</Block>
	<Block Name="UnrealScript Multiline Comment" Style="UnrealScript Comment" IsMultiline="true">
    	<Scope Start="/*" End="*/" Style="UnrealScript Comment" Text="/*...*/" />
    	<Keywords>
			<PatternGroup name="Special Comment" Style="UnrealScript Special Comment">
				<Pattern Text="@param" />
				<Pattern Text="@return" />
				<Pattern Text="@todo" />
				<Pattern Text="@fixme" />
				<Pattern Text="@hack" />
				<Pattern Text="@note" />
			</PatternGroup>
		</Keywords>
	</Block>
	<Block Name="UnrealScript Singleline Comment" Style="UnrealScript Comment" IsMultiline="false">
		<Scope Start="//" End="" Style="UnrealScript Comment" />
	</Block>
	<Block Name="UnrealScript String" Style="UnrealScript String" EscapeChar="\" IsMultiline="false">
		<Scope Start="&quot;" End="&quot;" Style="UnrealScript String" />
	</Block>
	<Block Name="UnrealScript Char" Style="UnrealScript Char" IsMultiline="false">
		<Scope Start="'" End="'" Style="UnrealScript Char" />
	</Block>
	<Style Name="UnrealScript Code" ForeColor="" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Comment" ForeColor="DarkGreen" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Special Comment" ForeColor="" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="UnrealScript String" ForeColor="DarkRed" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Char" ForeColor="DarkRed" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Number" ForeColor="DarkRed" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Constants" ForeColor="DarkRed" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Keyword" ForeColor="DarkBlue" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Types" ForeColor="Blue" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Defines" ForeColor="Red" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript Define Syntax" ForeColor="Red" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="UnrealScript CPP Syntax" ForeColor="Blue" BackColor="" Bold="false" Italic="false" Underline="false" />
</Language>