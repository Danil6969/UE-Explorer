<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NAME_IS" xml:space="preserve">
    <value xml:space="preserve">Name is {0}</value>
  </data>
  <data name="OBJECT_IS" xml:space="preserve">
    <value xml:space="preserve">Object is {0}</value>
  </data>
  <data name="Open_File" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="INVALID_NAME_INDEX" xml:space="preserve">
    <value xml:space="preserve">Invalid Name index {0}</value>
  </data>
  <data name="NOT_AVAILABLE" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="INVALID_OBJECT_INDEX" xml:space="preserve">
    <value xml:space="preserve">Invalid Object index {0}</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="UE_ProgramLogo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\UI\Main\ProgramLogo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="RegistryWarning" xml:space="preserve">
    <value>Enabling this will edit your registry file. 
If you happen to move the "UE Explorer" folder, uninstall or update it, then please disable this before doing so!</value>
  </data>
  <data name="NO_OBJECT_WAS_FOUND" xml:space="preserve">
    <value>No Object was found.</value>
  </data>
  <data name="search" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\search.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
	<data name="UC_PackageExplorer_PerformNodeAction_QUESTIONEXPORTFOLDER">
		<value xml:space="preserve">Do you want to go the folder with the exported content?</value>
	</data>
	<data name="NEW_VERSION_AVAILABLE_TITLE">
		<value xml:space="preserve">A new version is available!</value>
		<comment>Dialog title.</comment>
	</data>
	<data name="ProgramForm_checkForUpdates_Progress-Status">
		<value xml:space="preserve">Checking for updates...</value>
		<comment>Status</comment>
	</data>
	<data name="NO_NEW_VERSION_AVAILABLE_MESSAGE">
		<value xml:space="preserve">You have the latest version of {0}</value>
		<comment>Dialog description</comment>
	</data>
	<data name="Error">
		<value xml:space="preserve">Error</value>
		<comment>Dialog title</comment>
	</data>
	<data name="Options">
		<value xml:space="preserve">Options</value>
		<comment>Tab title</comment>
	</data>
	<data name="CHECKFORUPDATES_FAILED_MESSAGE">
		<value xml:space="preserve">Failed to request the latest version. Please try again later!</value>
	</data>
	<data name="Homepage">
		<value xml:space="preserve">Homepage</value>
		<comment>Tab title</comment>
	</data>
	<data name="ProgramForm_Unreal_Natives_Table_Generator">
		<value xml:space="preserve">Unreal Natives Table Generator</value>
		<comment>Tab title</comment>
	</data>
	<data name="ProgramForm_Cache_Extractor">
		<value xml:space="preserve">Cache Extractor</value>
		<comment>Tab title</comment>
	</data>
	<data name="ProgramForm_LoadFile_Failed_loading_package">
		<value xml:space="preserve">Failed loading package: {0}</value>
		<comment>Exception description.</comment>
	</data>
	<data name="ProgramForm_LoadFile_Loading_file">
		<value xml:space="preserve">Loading file {0}...</value>
		<comment>Status description.</comment>
	</data>
	<data name="NEW_VERSION_AVAILABLE_MESSAGE">
		<value xml:space="preserve">Clicking yes will bring you to the page with the latest version!

Your version: {0}
Latest version: {1}</value>
		<comment>Dialog description.</comment>
	</data>
	<data name="CANNOT_IMPORT_BINARY_NOTEQUAL_LENGTH">
		<value xml:space="preserve">You cannot import binary files with an unequal length!</value>
	</data>
	<data name="SAVE_QUESTION_WARNING">
		<value xml:space="preserve">Do you want to save this? Warning! This change will be permanent, make sure you have made a backup!</value>
	</data>
	<data name="SAVE_QUESTION">
		<value xml:space="preserve">Save?</value>
	</data>
	<data name="COULDNT_SAVE_EXCEPTION">
		<value xml:space="preserve">Couldn't save the package because of the following exception: {0}</value>
	</data>
	<data name="ExceptionDialog_THANKS">
		<value xml:space="preserve">Thanks for reporting this exception occurrance!</value>
	</data>
	<data name="ExceptionDialog_FAIL">
		<value xml:space="preserve">Failed to send this report. Please try again later!</value>
	</data>
	<data name="SUCCESS">
		<value xml:space="preserve">Successful</value>
	</data>
	<data name="SAVE_SUCCESS">
		<value xml:space="preserve">Successfully saved!</value>
	</data>
	<data name="SAVED">
		<value xml:space="preserve">Saved!</value>
	</data>
	<data name="EXPORTED_ALL_PACKAGE_CLASSES">
		<value xml:space="preserve">Exported all package classes of {0} to {1}

Click Yes if you want to go to the output directory!</value>
	</data>
	<data name="PACKAGE_IS_COMPRESSED">
		<value xml:space="preserve">This package is compressed! Compressed packages are not supported.

Please consider decompressing the package using "Unreal Package Decompressor" from Gildor

You can download the tool from http://www.gildor.org/downloads or press OK to go there now.</value>
	</data>
	<data name="COMPRESSED_HOWTO">
		<value xml:space="preserve">To use Gildor's tool, try "decompress.exe PACKAGENAME.EXT" you may have to specify -lzo.</value>
	</data>
	<data name="NOTICE_TITLE">
		<value xml:space="preserve">Notice</value>
	</data>
	<data name="PACKAGE_UNKNOWN_SIGNATURE">
		<value xml:space="preserve">This package has an unknown signature.

Are you sure you want to try to deserialize this package? Clicking Yes might lead to unexpected results!</value>
	</data>
	<data name="PACKAGE_LOADING">
		<value xml:space="preserve">Loading Package...</value>
	</data>
	<data name="PACKAGE_METAINFO">
		<value xml:space="preserve">Package's MetaInfo</value>
	</data>
	<data name="EXPORT_AS">
		<value xml:space="preserve">Export {0} As...</value>
	</data>
	<data name="CONSTRUCTING_OBJECTS">
		<value xml:space="preserve">Constructing Objects...</value>
	</data>
	<data name="DESERIALIZING_OBJECTS">
		<value xml:space="preserve">Deserializing Objects...</value>
	</data>
	<data name="IMPORTING_OBJECTS">
		<value xml:space="preserve">Importing Objects...</value>
	</data>
	<data name="LINKING_OBJECTS">
		<value xml:space="preserve">Linking Objects...</value>
	</data>
	<data name="INITIALIZING_UI">
		<value xml:space="preserve">Initializing UI...</value>
	</data>
	<data name="SEARCH_WIKI_ITEM">
		<value xml:space="preserve">Search UnrealWiki for "{0}"</value>
	</data>
</root>